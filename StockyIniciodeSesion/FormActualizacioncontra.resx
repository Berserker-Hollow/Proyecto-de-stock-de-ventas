<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>